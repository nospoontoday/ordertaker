version: '3.8'

services:
  # MongoDB service
  mongo:
    image: mongo:7
    container_name: ordertaker-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123  # Change this!
      MONGO_INITDB_DATABASE: ordertaker
    ports:
      - "127.0.0.1:27017:27017"  # Only accessible locally for security
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - ordertaker-network

  # Backend Node.js API (Production mode - using Docker Hub image)
  backend:
    image: YOUR_DOCKERHUB_USERNAME/ordertaker-backend:latest
    container_name: ordertaker-backend
    restart: unless-stopped
    ports:
      - "127.0.0.1:5000:5000"  # Only accessible locally, via Nginx
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongo:27017/ordertaker?authSource=admin
      PORT: 5000
      FRONTEND_URL: http://localhost
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/.env:/app/.env:ro  # Mount .env file as read-only
    depends_on:
      - mongo
    networks:
      - ordertaker-network
    command: node server.js

  # Next.js application (Production mode - using Docker Hub image)
  app:
    image: YOUR_DOCKERHUB_USERNAME/ordertaker-app:latest
    container_name: ordertaker-app
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"  # Only accessible locally, via Nginx
    environment:
      NODE_ENV: production
    volumes:
      - ./.env.local:/app/.env.local:ro  # Mount .env.local as read-only
    depends_on:
      - backend
    networks:
      - ordertaker-network
    command: npm start

networks:
  ordertaker-network:
    driver: bridge

volumes:
  mongo-data:
  mongo-config:
